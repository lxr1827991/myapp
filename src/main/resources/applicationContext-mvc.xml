<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
            http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- 启用spring mvc 注解 -->
    
    <context:annotation-config />
      <!-- 扫描注解 -->
    <context:component-scan base-package="com.park.api.controller"/>
    
     <context:component-scan base-package="com.park.api.service"/>
   <context:component-scan base-package="com.park.api.bean"/>
   
    
    <!-- 处理请求时返回json字符串的中文乱码问题 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
     <mvc:annotation-driven validator="validator" />
     
     <bean id="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    </bean>
<!--    方法级别的校验  要校验的方法所在类必须添加@Validated注解-->
    <bean
        class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <!-- 可以引用自己的 validator 配置，在本文中（下面）可以找到 validator 的参考配置，如果不指定则系统使用默认的 -->
        <property name="validator" ref="validator" />
    </bean>
    
    <!--配置拦截器, 多个拦截器,顺序执行 -->  
<mvc:interceptors>    
 <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->   
        <mvc:mapping path="/**" />
        <bean class="com.lxapp.appsession.spring.AppSessionInterceptor"></bean>    
    </mvc:interceptor>
    <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->   
        <mvc:mapping path="/user/**" />
         <mvc:mapping path="/user.do" />
         <mvc:mapping path="/voucher/**" />  
        <bean class="com.park.api.bean.LoginInterceptor"></bean>    
    </mvc:interceptor>  
    
    
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
</mvc:interceptors>  

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 跳转视图配置 -->
    <bean name="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"><!-- 跳转到JSP的视图 -->
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
        <!-- 相关JSP页面路径配置 -->
        <property name="prefix"><!-- JSP页面前缀 -->
            <value>/view/</value>
        </property>
        <property name="suffix"><!-- JSP页面后缀 -->
            <value>.jsp</value>
        </property>
    </bean>
    <bean name="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    
    
    
    <!-- Spring aop事务管理 -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="transactionPointcut"
                      expression="execution(* com.park.api.service.*.*(..))" />
        <!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->
        <aop:advisor pointcut-ref="transactionPointcut"
                     advice-ref="transactionAdvice" />
    </aop:config>
    
    
     <import resource="spring-beans.xml"/>
     
    
</beans>